// Verilog stimulus file.
// Please do not create a module in this file.


// Default verilog stimulus. 

initial
begin

   // AND

   Ain[31:0] = 32'h0000_0000;

   Bin[31:0] = 32'h0000_0000;

   Cin[3:0] = 4'b0000;

   #500

   Ain[31:0] = 32'h0F0F_0F0F;

   Bin[31:0] = 32'hF0F0_F0F0;

   #500

   Ain[31:0] = 32'hF0F0_F0F0;

   Bin[31:0] = 32'h0F0F_0F0F;

   #500

   Ain[31:0] = 32'hFFFF_FFFF;

   Bin[31:0] = 32'hFFFF_FFFF;

   #500

   Ain[31:0] = 32'hD8A3_B8D4;

   Bin[31:0] = 32'h63B9_D6F2;

   #500

   // OR

   Ain[31:0] = 32'h0000_0000;

   Bin[31:0] = 32'h0000_0000;

   Cin[3:0] = 4'b0001;

   #500

   Ain[31:0] = 32'h0F0F0F0F;

   Bin[31:0] = 32'hF0F0F0F0;

   #500

   Ain[31:0] = 32'hF0F0F0F0;

   Bin[31:0] = 32'h0F0F0F0F;

   #500

   Ain[31:0] = 32'hFFFFFFFF;

   Bin[31:0] = 32'hFFFFFFFF;

   #500

   Ain[31:0] = 32'hD8A3B8D4;

   Bin[31:0] = 32'h63B9D6F2;

   #500

   // ADD

   Ain[31:0] = 32'h00000000;

   Bin[31:0] = 32'h00000000;

   Cin[3:0] = 4'b0010;

   #500

   Ain[31:0] = 32'h0F0F0F0F;

   Bin[31:0] = 32'hF0F0F0F0;

   #500

   Ain[31:0] = 32'h7FFFFFFF;

   Bin[31:0] = 32'h00000001;

   #500

   Ain[31:0] = 32'hFFFFFFFF;

   Bin[31:0] = 32'h00000001;

   #500

   Ain[31:0] = 32'hD8A3B8D4;

   Bin[31:0] = 32'h63B9D6F2;

   #500

   // SUB

   Ain[31:0] = 32'h00000000;

   Bin[31:0] = 32'h00000000;

   Cin[3:0] = 4'b0110;

   #500

   Ain[31:0] = 32'h00000000;

   Bin[31:0] = 32'h00000001;

   #500

   Ain[31:0] = 32'h00000001;

   Bin[31:0] = 32'h80000001;

   #500

   Ain[31:0] = 32'h00000001;

   Bin[31:0] = 32'h00000001;

   #500

   Ain[31:0] = 32'hD8A3B8D4;

   Bin[31:0] = 32'h63B9D6F2;

   #500

   // SLT
     
   Ain[31:0] = 32'h00000000;

   Bin[31:0] = 32'h00000000;

   Cin[3:0] = 4'b0111;

   #500

   Ain[31:0] = 32'h00000000;

   Bin[31:0] = 32'h00000001;

   #500

   Ain[31:0] = 32'h00000001;

   Bin[31:0] = 32'h80000001;

   #500

   Ain[31:0] = 32'h00000001;

   Bin[31:0] = 32'h00000001;

   #500

   Ain[31:0] = 32'hD8A3B8D4;

   Bin[31:0] = 32'h63B9D6F2;

   #500

   $finish;
   
end 
